Git 

Git - система контроля версий
GitHub - удаленная платформа, которая позволяет разработчикам создавать, 
хранить, управлять и делиться своим кодом.


Задать имя и почту (локально)

git config --global user.name "Your name"
git config --global user.email "Your email"


Сделать из папки гит репозиторий

1) Переходим в нужную папку 

cd <url_нужной_папки>

2) Делаем из нее репозиторий

git init 


Связать локальный репозиторий с удаленным

git remote add origin <url_удаленного_репозитория>


Создать репозиторий на основе удаленного (скопипастить себе чейто репозиторий)

1) Переходим в папку в которую будем скачивать репозиторий

cd <url_нужной_папки>

2) Прописываем команду

git clone <url_удаленного_репозитория>

Также скаченный репозиторий автоматически связан с удаленным


Вывести состояние файлов

git status


Подготовить файлы к коммиту, добавляя их в индекс гита. Индекс гита - это хранилище файлов, готовых к коммиту

git add <url_нужного_файла_или_папки>

Чтобы добавить в индекс сразу все файлы директории, в которой вы находитесь можно просто прописать

git add .

 
Сделать коммит (сохранить версию файлов в индексе) 

git commit -m "Описание данной версии"


Вывести информацию о коммитах в данной ветке в хронологическом порядке

git log 


Перенестись к другому коммиту 

git checkout <хэш_коммита>


Загрузить коммиты из локального в публичный репозиторий

git push <имя_репозитория> <ветка>

Можно также написать 

git push origin master

    origin - это кодовое слово, которое хранит удаленный репозиторий данного репозитория
    master - это основная ветка


Скачать из удаленного репозитория все коммиты

git pull <имя_репозитория> <ветка>


Вывести все ветки данного репозитория

git branch


Создание новой ветки 

git branch <имя_новой_ветки>

Удалить ветку 

git branch -D <название_ветки>

 
Переключение на другую ветку 

git checkout <имя_ветки>


Чтобы запушить ветку на удаленный репозиторий нужную прописать

git push origin <имя_добавляемой_ветки>


Чтобы сделать слияние веток (перекинуть все изменения из одной ветки в другую) нужно сделать:

1) Перейти в ветку в которую будем загружать изменения

2) Прописываем

git merge <имя_ветки_которую_переносим>

Теперь в ветке, в которую мы слияли другую ветку, появится новый коммит


Чтобы перенести все коммиты из одной ветки в другую нужно

1) Перейти в ветку в которую будем загружать изменения

2) Прописываем

git rebase <имя_добавляемой_ветки>


pull request (merge request) - это запрос на слияние ветки в гитхабе
